C51 COMPILER V7.08   SEG                                                                   11/27/2013 14:05:42 PAGE 1   


C51 COMPILER V7.08, COMPILATION OF MODULE SEG
OBJECT MODULE PLACED IN C:\ISP's\SP_ISP\seg.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE seg.c BROWSE DEBUG OBJECTEXTEND OBJECT(C:\ISP's\SP_ISP\seg.obj)

line level    source

   1          #include<reg51.h>
   2          #include"delay.h"
   3          
   4          code unsigned char seg_lut[]={0x40,0x79,0x24,0x30,0x19,0x12,0x02,0x78,0x00,0x10};
   5          
   6          #define segs_4_mux P0
   7          
   8          sbit sel1=P2^0;
   9          sbit sel2=P2^1;
  10          sbit sel3=P2^2;
  11          sbit sel4=P2^3;
  12          
  13          unsigned char dp1=0x80,dp2=0x80;
  14          unsigned char dp3=0x80,dp4=0x80;
  15          
  16          
  17          void disp_4_mux_segs(unsigned int n)
  18          {
  19   1      if(n>=0 && n<10)
  20   1      {
  21   2       segs_4_mux=seg_lut[n%10]|dp4;
  22   2       sel4=0;
  23   2       delay_ms(1);
  24   2       sel4=1;
  25   2      }
  26   1      
  27   1      else if(n>=10 && n<100)
  28   1      {
  29   2       segs_4_mux=seg_lut[n/10]|dp3;
  30   2       sel3=0;
  31   2       delay_ms(1);
  32   2       sel3=1;
  33   2      
  34   2       segs_4_mux=seg_lut[n%10]|dp4;
  35   2       sel4=0;
  36   2       delay_ms(1);
  37   2       sel4=1;
  38   2      }
  39   1      
  40   1      else if(n>=100 && n<1000)
  41   1      {
  42   2       segs_4_mux=seg_lut[n/100]|dp2;
  43   2       sel2=0;
  44   2       delay_ms(1);
  45   2       sel2=1;
  46   2       
  47   2       segs_4_mux=seg_lut[(n/10)%10]|dp3;
  48   2       sel3=0;
  49   2       delay_ms(1);
  50   2       sel3=1;
  51   2      
  52   2       segs_4_mux=seg_lut[n%10]|dp4;
  53   2       sel4=0;
  54   2       delay_ms(1);
  55   2       sel4=1;
C51 COMPILER V7.08   SEG                                                                   11/27/2013 14:05:42 PAGE 2   

  56   2      }
  57   1      
  58   1      else
  59   1      {
  60   2       segs_4_mux=seg_lut[n/1000]|dp1;
  61   2       sel1=0;
  62   2       delay_ms(1);
  63   2       sel1=1;
  64   2      
  65   2       segs_4_mux=seg_lut[(n/100)%10]|dp2;
  66   2       sel2=0;
  67   2       delay_ms(1);
  68   2       sel2=1;
  69   2       
  70   2       segs_4_mux=seg_lut[(n%100)/10]|dp3;
  71   2       sel3=0;
  72   2       delay_ms(1);
  73   2       sel3=1;
  74   2      
  75   2       segs_4_mux=seg_lut[n%10]|dp4;
  76   2       sel4=0;
  77   2       delay_ms(1);
  78   2       sel4=1;
  79   2      }
  80   1      }
  81          void dispf_4_mux_segs(float f)
  82          {
  83   1       int t;
  84   1       if(f>=0.0 && f<10.0)
  85   1      {
  86   2       t=f*1000;
  87   2       dp1=0;
  88   2      }
  89   1      
  90   1      else if(f>=10.0 && f<100.0)
  91   1      {
  92   2       t=f*100;
  93   2       dp2=0;
  94   2      }
  95   1      
  96   1      else if(f>=100.0 && f<1000.0)
  97   1      {
  98   2       t=f*10;
  99   2       dp3=0;
 100   2      }
 101   1      disp_4_mux_segs(t);
 102   1      
 103   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    596    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
