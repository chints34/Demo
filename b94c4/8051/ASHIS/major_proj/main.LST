C51 COMPILER V7.08   MAIN                                                                  12/19/2013 17:56:54 PAGE 1   


C51 COMPILER V7.08, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil2\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg51.h>
   2          //#include<keypad.h>
   3          unsigned int ch,s;
   4          unsigned int i;
   5          #define leds P0;
   6          sbit led1=P0^0;
   7          sbit led2=P0^1;
   8          sbit led3=P0^2;
   9          sbit led4=P0^3;
  10          sbit led5=P0^4;
  11          sbit led6=P0^5;
  12          sbit led7=P0^6;
  13          sbit led8=P0^7;
  14          sbit sw1=P2^0;
  15          sbit sw2=P2^1;
  16          sbit sw3=P2^2;
  17          sbit sw4=P2^3;
  18          sbit sw5=P2^4;
  19          sbit sw6=P2^5;
  20          sbit sw7=P2^6;
  21          sbit sw8=P2^7;
  22          
  23          
  24          void uart_init()
  25          {
  26   1              SCON=0x50;
  27   1              TMOD=0x20;
  28   1              TH1=TL1=-3;
  29   1              TR1=1;
  30   1      }
  31          void uart_tx(unsigned char c)
  32          {
  33   1              uart_init();
  34   1              SBUF=c;
  35   1              while(!TI);
  36   1              TI=0;
  37   1      }
  38          unsigned char uart_rx()
  39          {
  40   1              while(!RI);
  41   1              RI=0;
  42   1              return SBUF;
  43   1      }
  44          void uart_str(unsigned char *p)
  45          {
  46   1              while(*p)
  47   1              {
  48   2                      uart_tx(*p++);
  49   2              }
  50   1      }
  51          main()
  52          {
  53   1      while(1)
  54   1      {
  55   2              uart_str("8051 TEST KIT PROGRAM\n\r");
C51 COMPILER V7.08   MAIN                                                                  12/19/2013 17:56:54 PAGE 2   

  56   2              uart_str("PRESS KEY TO START TESTING....\n\r");
  57   2              uart_str("1>LED testing\n\r");
  58   2              uart_str("2>SWITCH testing\n\r");
  59   2              uart_str("3>KEYPAD testing\n\r");
  60   2              uart_str("4>7_SEGMENT testing\n\r");
  61   2              uart_str("5>LCD testing\n\r");
  62   2              uart_str("6>UART testing\n\r");
  63   2              uart_str("7>I2C testing\n\r");
  64   2              uart_str("8>SPI testing\n\r");
  65   2              uart_str("9>IR testing\n\r");
  66   2      
  67   2              ch=uart_rx();
  68   2      
  69   2      
  70   2      if(ch=='1')
  71   2      {
  72   3      uart_str("connect active leds to p0.0 to p0.3\n");
  73   3      uart_str("connect active high leds to p0.4 to p0.7\n");
  74   3      P0=0x0F;
  75   3      uart_str("is leds is working\n");
  76   3      uart_str("press 'y' for yes or 'n' for no\n");
  77   3      ch=uart_rx();
  78   3      if(ch=='n')
  79   3      {
  80   4      uart_str("check the connection\n");
  81   4      
  82   4      }
  83   3      else
  84   3      uart_str("leds working properly\n");
  85   3      
  86   3      }
  87   2      if(ch=='2')
  88   2      {
  89   3      P0=0x0f;
  90   3      uart_str("make following connection\n");
  91   3      uart_str("sw1 to sw4 connect to p0.0 to p0.3\n");
  92   3      uart_str("sw5 to sw8 connect to p0.4 to p0.7\n");
  93   3      while(1)
  94   3       { 
  95   4          if(sw1==0) 
  96   4           {
  97   5            P0=0x0e;
  98   5            uart_str("switch 1 is pressed\n");
  99   5            break;
 100   5           }
 101   4         if(sw2==0)
 102   4          {
 103   5           P0=0x0d;
 104   5            uart_str("switch 2 is pressed\n");     
 105   5           break;
 106   5           }
 107   4         if(sw3==0)
 108   4          {
 109   5            P0=0x0b;
 110   5            uart_str("switch 3 is pressed\n");     
 111   5            break;
 112   5          }
 113   4        if(sw4==0)
 114   4          { 
 115   5            P0=0x07;
 116   5            uart_str("switch 4 is pressed\n");     
 117   5            break;
C51 COMPILER V7.08   MAIN                                                                  12/19/2013 17:56:54 PAGE 3   

 118   5          }
 119   4         if(sw5==0)
 120   4          {
 121   5           P0=0x1f;
 122   5           uart_str("switch 5 is pressed\n");
 123   5           break;
 124   5          }
 125   4         if(sw6==0)
 126   4         {
 127   5          P0=0x2f;
 128   5          uart_str("switch 6 is pressed\n");
 129   5          break;
 130   5         }
 131   4        if(sw7==0)
 132   4         {
 133   5          P0=0x4f;
 134   5          uart_str("switch 7 is pressed\n");
 135   5          break;
 136   5          }
 137   4         if(sw8==0)
 138   4          {
 139   5           P0=0x8f;
 140   5           uart_str("switch 8 is pressed\n");
 141   5           break;
 142   5          }
 143   4      }
 144   3        uart_str("switch is working???\n"); 
 145   3        uart_str("presee 'n' for not\n");
 146   3        ch=uart_rx();
 147   3       if(ch=='n')
 148   3           {
 149   4              uart_str("CHECK HARDWARE CONNECTION PROPER OR NOT\n");
 150   4      
 151   4           }
 152   3          else
 153   3              uart_str("SWTCH WORKING PROPERLY..\n");
 154   3      /*if(ch=='3')
 155   3        {
 156   3         uart_str("PRESS THE KEY FROM KEYPAD\n");
 157   3        while(1)
 158   3          {
 159   3           leds=~keyscan();
 160   3           break;
 161   3          }
 162   3         uart_str("KEYPAD IS WORKING OR NOT??\n");
 163   3              uart_str("PRESS N FOR NOT WORKING\n");   
 164   3      ch=uart_rx()
 165   3         if(ch=='n')
 166   3         {
 167   3          uart_str("CHECK THE CONNECTION MADE PROPERLY OR NOT\n");
 168   3         }
 169   3        else
 170   3         { 
 171   3              uart_str("KEYPAD WORKING PROPERLY\n");*/
 172   3        }
 173   2      }
 174   1      }
 175          
 176          //}
 177          
 178          //}
 179          
C51 COMPILER V7.08   MAIN                                                                  12/19/2013 17:56:54 PAGE 4   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    468    ----
   CONSTANT SIZE    =    766    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
