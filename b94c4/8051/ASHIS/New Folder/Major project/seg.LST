C51 COMPILER V7.08   SEG                                                                   12/20/2013 14:30:11 PAGE 1   


C51 COMPILER V7.08, COMPILATION OF MODULE SEG
OBJECT MODULE PLACED IN seg.OBJ
COMPILER INVOKED BY: C:\Keil2\C51\BIN\C51.EXE seg.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg51.h>
   2          #include"delay.h"
   3          
   4          sfr p0=0x80;
   5          sfr p2=0xa0;
   6          
   7          code unsigned char seg_lut[]={0x40,0x79,0x24,0x30,0x19,0x12,0x02,0x78,0x00,0x10};
   8          
   9          #define seg_4_mux p0
  10          
  11          sbit sel1=p2^0;
  12          
  13          sbit sel2=p2^1;
  14          
  15          sbit sel3=p2^2;
  16          
  17          sbit sel4=p2^3;
  18          
  19          unsigned char dp1=0x00,dp2=0x00,dp3=0x00,dp4=0x00;
  20          
  21          void disp_4_mux_segs(unsigned int n)
  22          {
  23   1      
  24   1                      if(n>=0 && n<10)
  25   1                      {           
  26   2                              seg_4_mux=seg_lut[n%10]|dp4;
  27   2                              sel4=0;
  28   2                              delay_ms(1);
  29   2                              sel4=1;
  30   2                       }
  31   1                       else if(n>=10 && n<100)
  32   1                      {
  33   2                      
  34   2                              seg_4_mux=seg_lut[n/10]|dp3;
  35   2                              sel3=0;
  36   2                              delay_ms(1);
  37   2                              sel3=1;  
  38   2                      
  39   2                              seg_4_mux=seg_lut[n%10]|dp4;
  40   2                              sel4=0;
  41   2                              delay_ms(1);
  42   2                              sel4=1;
  43   2                       }
  44   1                       else if(n>=100 && n<1000)
  45   1                      {
  46   2              
  47   2                  seg_4_mux=seg_lut[n/100]|dp2;
  48   2                              sel2=0;
  49   2                              delay_ms(1);
  50   2                              sel2=1;
  51   2                              
  52   2                              seg_4_mux=seg_lut[(n/10)%10]|dp3;
  53   2                              sel3=0;
  54   2                              delay_ms(1);
  55   2                              sel3=1;
C51 COMPILER V7.08   SEG                                                                   12/20/2013 14:30:11 PAGE 2   

  56   2                      
  57   2            
  58   2                              seg_4_mux=seg_lut[n%10]|dp4;
  59   2                              sel4=0;
  60   2                              delay_ms(1);
  61   2                              sel4=1;
  62   2                       }
  63   1                       else
  64   1                      {
  65   2              
  66   2                          seg_4_mux=seg_lut[n/1000]|dp1;
  67   2                              sel1=0;
  68   2                              delay_ms(1);
  69   2                              sel1=1;
  70   2      
  71   2                  seg_4_mux=seg_lut[(n/100)%10]|dp2;
  72   2                              sel2=0;
  73   2                              delay_ms(1);
  74   2                              sel2=1;
  75   2                              
  76   2                              seg_4_mux=seg_lut[(n%100)/10]|dp3;
  77   2                              sel3=0;
  78   2                              delay_ms(1);
  79   2                              sel3=1;
  80   2                      
  81   2            
  82   2                              seg_4_mux=seg_lut[n%10] | dp4;
  83   2                              sel4=0;
  84   2                              delay_ms(1);
  85   2                              sel4=1;
  86   2                       }
  87   1      
  88   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    374    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
