C51 COMPILER V7.08   LCDTEST                                                               10/12/2010 02:35:23 PAGE 1   


C51 COMPILER V7.08, COMPILATION OF MODULE LCDTEST
OBJECT MODULE PLACED IN C:\ISP's\lcdtest.obj
COMPILER INVOKED BY: C:\Keil2\C51\BIN\C51.EXE lcdtest.c BROWSE DEBUG OBJECTEXTEND OBJECT(C:\ISP's\lcdtest.obj)

line level    source

   1          #include<reg51.h>
   2          #include"delay.h"
   3          #include"uart.h"
   4          #define lcd_dat P0
   5          
   6          
   7          sbit rs=P2^0;
   8          sbit rw=P2^1;
   9          sbit en=P2^2;
  10          
  11          
  12          void write_lcd(unsigned char dat)
  13          {
  14   1              lcd_dat=dat;
  15   1              rw=0;   //write operation
  16   1              en=1;   //latch data into buffer
  17   1              
  18   1              delay_ms(2);    //sync delay
  19   1      en=0;   //reset latch for next operation
  20   1      }
  21          
  22          void cmd_lcd(unsigned char cmd)
  23          {
  24   1              rs=0;   //select cmd reg
  25   1              write_lcd(cmd); //write info into cmd reg
  26   1      }
  27          
  28          void disp_lcd(unsigned char c)
  29          {
  30   1              rs=1;   //sel data reg
  31   1              write_lcd(c);   //write info into DDRAM via data reg
  32   1      }
  33          
  34          void init_lcd(void)
  35          {
  36   1              cmd_lcd(0x01);  //clr DDRAM/display/screen
  37   1              cmd_lcd(0x02);  //return cursor to home pos
  38   1              cmd_lcd(0x06);  //set cursor move direction to right
  39   1              cmd_lcd(0x0c);  //enable disply,cursor off
  40   1              cmd_lcd(0x38);  //set interface length 5x7 char font
  41   1              cmd_lcd(0x80);  //begin display to DDRAM at line 1 pos 0
  42   1      }
  43          /*
  44          void str_lcd(unsigned char *s)
  45          {
  46                  while(*s)
  47                          disp_lcd(*s++);
  48          }
  49          
  50          void uint_lcd(unsigned int n)
  51          {
  52                  char a[5]={0},i=0;
  53                  if(n==0)
  54                          disp_lcd('0');
  55                  else
C51 COMPILER V7.08   LCDTEST                                                               10/12/2010 02:35:23 PAGE 2   

  56                  {
  57                          while(n>0)
  58                          {
  59                                  a[i++]=(n%10)+48;
  60                                  n=n/10;
  61                          }
  62                  }
  63                  for(--i;i>=0;i--)
  64                          disp_lcd(a[i]);
  65          }
  66          
  67          void float_lcd(float f)
  68          {
  69                  unsigned int i;
  70                  unsigned char j;
  71                  i=f;
  72                  uint_lcd(i);
  73                  disp_lcd('.');
  74                  for(j=0;j<6;j++)
  75                  {
  76                          f=(f-i)*10;
  77                          i=f;
  78                          uint_lcd(i);
  79                  }
  80          }
  81          
  82          void hex_lcd(unsigned int n)
  83          {
  84                  char a[4],i=0,t;
  85                  if(n==0)
  86                          disp_lcd('0');
  87                  else
  88                  {
  89                          while(n>0)
  90                          {
  91                                  t=n%16;
  92                                  n=n/16;
  93                                  if(t<10)
  94                                          a[i++]=t+48;
  95                                  else
  96                                          a[i++]=(t-10)+'A';                      
  97                          }
  98                  for(--i;i>=0;i--)
  99                          disp_lcd(a[i]);
 100                  }
 101          }
 102          
 103          void build_cgram(char *s,unsigned char n)
 104          {
 105          unsigned char i;
 106          //cmd_lcd(0x01);
 107          cmd_lcd(0x40);
 108          for(i=0;i<n;i++)
 109          {
 110          disp_lcd(s[i]);
 111          }
 112          cmd_lcd(0x80);
 113          }
 114          
 115          
 116          
 117          */
C51 COMPILER V7.08   LCDTEST                                                               10/12/2010 02:35:23 PAGE 3   

 118          //lcd_test function
 119          void lcd_test()
 120          {
 121   1      unsigned char t,i,x;
 122   1      init_lcd();
 123   1      repeat:  print("YOU ARE IN LCD TESTING MODULE\n\r");
 124   1          
 125   1              //[ACTIVE HIGH LEDs AT P0.0 TO P0.3 | ACTIVE LOW LEDs AT P0.4 TO P0.7]
 126   1              print("connect port P0 to data pins of lcd and tconnect port P2.0 to rs ,P2.1 to rw,P2.2 to en\n\r");
 127   1          
 128   1              //TESTING
 129   1              print("TESTING..\n\r");
 130   1      print("Enter any key to test...\n\r");
 131   1      uart_rx();
 132   1        
 133   1      for(i=0;i<26;i++)
 134   1      {
 135   2      t='A'+i;
 136   2      //uart_tx(t);
 137   2      cmd_lcd(0x80);
 138   2      disp_lcd(t);
 139   2      
 140   2      
 141   2      cmd_lcd(0xc0);
 142   2      disp_lcd(t);
 143   2      delay_ms(1000);
 144   2      
 145   2      }
 146   1      
 147   1        print("check A to Z charecters are displaying or not?\nenter(Y)for Yes(N)for No\n\r");
 148   1          x=uart_rx();
 149   1          if(x=='Y'||x=='y')
 150   1          {
 151   2           print("Yes,Lcd is working fine\n\r");
 152   2           return;
 153   2          }
 154   1              else
 155   1              {
 156   2              goto repeat;
 157   2              }
 158   1      
 159   1      
 160   1      
 161   1      }//end of lcd_test fn
 162          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    178    ----
   CONSTANT SIZE    =    261    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
