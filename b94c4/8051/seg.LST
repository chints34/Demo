C51 COMPILER V7.08   SEG                                                                   11/17/2013 13:36:53 PAGE 1   


C51 COMPILER V7.08, COMPILATION OF MODULE SEG
OBJECT MODULE PLACED IN C:\ISPs\SP_ISP\seg.obj
COMPILER INVOKED BY: C:\Keil2\C51\BIN\C51.EXE seg.c BROWSE DEBUG OBJECTEXTEND OBJECT(C:\ISPs\SP_ISP\seg.obj)

line level    source

   1          #include<reg51.h>
   2          #include"delay.h"
   3          code unsigned char seg_lut[]={0x40,0x79,0x30,0x19,0x12,0x02,0x78,0x00,0x10};
   4          #define segs_4_mux P0
   5          sbit sel1=P2^0;
   6          sbit sel2=P2^1;
   7          sbit sel3=P2^2;
   8          sbit sel4=P2^3;
   9          unsigned char dp1=0x80,dp2=0x80,dp3=0x80,dp4=0x80;
  10          
  11          
  12          void disp_4_mux_segs(unsigned int n)
  13          {
  14   1      segs_4_mux=seg_lut[n/1000]|dp1;
  15   1      sel1=0;
  16   1      delay_1ms(1);
  17   1      sel1=1;
  18   1      
  19   1      segs_4_mux=seg_lut[(n/100)%10]|dp2;
  20   1      sel2=0;
  21   1      delay_1ms(1);
  22   1      sel2=1;
  23   1      
  24   1      segs_4_mux=seg_lut[(n%100)/10]|dp3;
  25   1      sel3=0;
  26   1      delay_1ms(1);
  27   1      sel3=1;
  28   1      
  29   1      segs_4_mux=seg_lut[n%10]|dp4;
  30   1      sel4=0;
  31   1      delay_1ms(1);
  32   1      sel4=1;
  33   1      
  34   1      }
  35          
  36          void dispf_4_mux_segs(float f)
  37          {
  38   1      int t;
  39   1      if(f>=0.0&&f<10.0)
  40   1        {
  41   2         t=f*1000; dp1=0;
  42   2      
  43   2        }
  44   1      else if(f>=10.0&&f<100.0)
  45   1        {
  46   2         t=f*100; dp2=0;
  47   2      
  48   2        }
  49   1      else if(f>=100.0&&f<1000.0)
  50   1        {
  51   2         t=f*10; dp3=0;
  52   2      
  53   2        }
  54   1      
  55   1      disp_4_mux_segs(t);
C51 COMPILER V7.08   SEG                                                                   11/17/2013 13:36:53 PAGE 2   

  56   1      }
  57          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    395    ----
   CONSTANT SIZE    =      9    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
