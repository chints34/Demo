C51 COMPILER V7.08   LCD                                                                   11/19/2013 15:17:10 PAGE 1   


C51 COMPILER V7.08, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN C:\ISP'S\SP_ISP\bin\lcd.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE lcd.c BROWSE DEBUG OBJECTEXTEND OBJECT(C:\ISP'S\SP_ISP\bin\lcd.obj)

line level    source

   1          #include<reg51.h>
   2          #include"delay.h"
   3          #define lcd_dat P0
   4          sbit rs=P2^0;
   5          sbit rw=P2^1;
   6          sbit en=P2^2;
   7          void write_lcd(unsigned char dat)
   8          {
   9   1      lcd_dat=dat;
  10   1      rw=0;//wrte operaton
  11   1      en=1;
  12   1      en=0;
  13   1      delay_1ms(2);//sync delay
  14   1      
  15   1      }
  16          void cmd_lcd(unsigned char c)
  17          {
  18   1      
  19   1      rs=0;//set cmd reg
  20   1      write_lcd(c);//write nto ddram via data reg.
  21   1      }
  22          void disp_lcd(unsigned char c)
  23          {
  24   1      rs=1;
  25   1      write_lcd(c);
  26   1      
  27   1      }
  28          void init_lcd(void)
  29          {
  30   1      //clr ddram/dsplay/screen
  31   1      cmd_lcd(0x01);
  32   1      //return cursor to the home position
  33   1      cmd_lcd(0x02);
  34   1      //set cursor move diirection to right
  35   1      cmd_lcd(0x06);
  36   1      //enable display,cursor off
  37   1      cmd_lcd(0x0c);
  38   1      //set interfece length to 8 bit
  39   1      
  40   1      cmd_lcd(0x38);
  41   1      //bgn the dsplay/set cursor to ddram AT LINE1 POS 0
  42   1      cmd_lcd(0x80);
  43   1      
  44   1      
  45   1      }
  46          void build_cgram(char *s,unsigned int n)
  47          {
  48   1      unsigned char i;
  49   1      cmd_lcd(0x40);
  50   1      for(i=0;i<n;i++)
  51   1      {
  52   2      disp_lcd(s[i]);
  53   2      
  54   2      }
  55   1      cmd_lcd(0x80);
C51 COMPILER V7.08   LCD                                                                   11/19/2013 15:17:10 PAGE 2   

  56   1      }
  57          
  58          void build_cgram1(char *s,unsigned int n)
  59          {
  60   1      unsigned char j;
  61   1      cmd_lcd(0x48);
  62   1      for(j=0;j<n;j++)
  63   1      {
  64   2      disp_lcd(s[j]);
  65   2      
  66   2      }
  67   1      cmd_lcd(0x80);
  68   1      }
  69          
  70          
  71          void str_lcd(unsigned char *s)
  72          {
  73   1      
  74   1      while(*s)
  75   1      disp_lcd(*s++);
  76   1      
  77   1      }
  78          void uint_lcd(unsigned int n)
  79          {
  80   1      
  81   1       char a[5]={0},i=0;
  82   1       if(n==0)
  83   1       disp_lcd('0');
  84   1       else
  85   1        {
  86   2         while(n>0)
  87   2               {
  88   3                              a[i++]=(n%10)+48;
  89   3                              n=n/10;
  90   3               }
  91   2      
  92   2         for(--i;i>=0;i--)
  93   2         disp_lcd(a[i]);
  94   2       }
  95   1      }
  96          
  97          /*void float_lcd(float f)
  98          {
  99            unsigned int i;
 100            unsigned char j;
 101            i=f;
 102            uint_lcd(i);
 103            disp_lcd('.'); 
 104           for(j=0;j<i;j++)
 105            {
 106             f=(f-1)*10;
 107             i=f;
 108             uint_lcd(i);
 109          
 110            }
 111          
 112          }
 113          
 114          void hex_lcd(unsigned int n)
 115          {
 116           char a[4]={0},i,t;
 117           if(n==0)
C51 COMPILER V7.08   LCD                                                                   11/19/2013 15:17:10 PAGE 3   

 118             disp_lcd('0');
 119          else
 120            {
 121              while(n>0)
 122                   {
 123                            t=n%16;
 124                            n=n/16;
 125                   if(t<10)
 126                      a[i++]=t+48;
 127                   else
 128                          a[i++]=(t-10)+'A';
 129          
 130          
 131                   for(--i;i>=0;i--)
 132                       disp_lcd(a[i]);
 133          
 134          
 135              }
 136          
 137            }
 138          
 139           }
 140          
 141          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    313    ----
   CONSTANT SIZE    =      5    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      23
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
